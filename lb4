
import org.junit.Assert;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
public class LabTest {
	//1
	Lab lab1=new Lab();
	private static Object[] numbers() {
		return new Object[][] {
			{125,8},
			{201,3},
			{123,7},
			{222,6},
			{701,8},
		};
	}
	@ParameterizedTest
	@MethodSource("numbers")
	public void test1(int number, int exp) {
		Assert.assertEquals(lab1.count(number), exp);
	}
	//2
	private static Object[] strings() {
		return new Object[][] {
			{"java","JAVA"},
			{"sTrInG","StRiNg"},
			{"HELLO","hello"},
			{"sunrise IN mykolaiv","SUNRISE in MYKOLAIV"},
			{"PEOPLE IN LIVERPOOL","people in liverpool"},
		};
	}
	@ParameterizedTest
	@MethodSource("strings")
	public void test2(String input,String expect) {
		Assert.assertEquals(lab1.transfer(input),expect);
	}
	//3
	
	private static Object[] arrs() {
		return new Object[][]{
			{new int[]{1,5,8,6},new int[]{1,8,5,7},"[1, 5, 8]"},
			{new int[]{2,9,7,6},new int[]{2,9,1,3},"[2, 9]"},
			{new int[]{3,9,6,1},new int[]{2,9,7,6},"[9, 6]"},
			{new int[]{1,2,8,6},new int[]{2,12,7,6},"[2, 6]"},
			{new int[]{81,9,2,16},new int[]{16,99,81,6},"[81, 16]"},
		};
	}
	@ParameterizedTest
	@MethodSource("arrs")
	public void test3(int[] input1, int[] input2, String expect1) {

	  
		Assert.assertEquals( lab1.getIntersection(input1,input2),expect1);
	}	
	//4
	private static Object[] convert() {
		return new Object[][]{
			{11,16,"0B"},
			{12,16,"0C"},
			{28,16,"1C"},
			{24,16,"18"},
			{154,16,"9A"},
		};
	}
	@ParameterizedTest
	@MethodSource("convert")
	public void test4(int input1, int input2, String expect1) {
	
	  
		Assert.assertEquals( lab1.Convert(input1,input2),expect1);
	}	
	//5
	private static Object[] sort() {
		return new Object[][]{
			{new int[]{25,64,14,25,19},"[14, 19, 25, 25, 64]"},
			{new int[]{12,157,56,127,2},"[2, 12, 56, 127, 157]"},
			{new int[]{1,8,14,2,0,-6,-3},"[-6, -3, 0, 1, 2, 8, 14]"},
			{new int[]{-3,-4,-5,-6,-67,1},"[-67, -6, -5, -4, -3, 1]"},
			{new int[]{0,-3,45,1,5,1},"[-3, 0, 1, 1, 5, 45]"}
		};
	}
	@ParameterizedTest
	@MethodSource("sort")
	public void test5(int[] input1, String expect1) {
		Assert.assertEquals( lab1.selectionSort(input1),expect1);
		Assert.assertNotSame(lab1.selectionSort(input1), expect1);
	}	
}
